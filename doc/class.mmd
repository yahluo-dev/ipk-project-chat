%%{init: { "class": { "height": 300, "width": 300 } } }%%
classDiagram
  class Client {
    -bool interrupted
    -void print_prompt()
    +repl()
    +ctrlc_handler(s: int)
  }

  class Session {
    -string username
    -string displayname
    -string hostname
    -int socket
    -uint16_t message_id
    -session_state_t state
    -vector<Message *> inbox

    +auth(uname: string,dispname: string,secret: string)
    +send_msg(contents: string)
    +notify_incoming(message: Message *)
  }

  class Sender {
    -sender_state_t state
    +send_msg(m: MessageWithId *)
  }

  class TCPSender {
    +void send_msg(MessageWithId *msg);
  }

  class UDPSender {
    -int max_retr
    -vector<ConfirmMsg> conf_inbox
    MessageWithId *last_sent
    int timeout;
    addrinfo server_addrinfo

    +confirm(uint16_t ref_message_id)
    +notify_confirm(msg: Message)
    +send_msg(msg: MessageWithId *)
    +update_addrinfo(hostname: string, port: string)
  }

  
  class Receiver {
    +receive()
  }

  class TCPReceiver {
    receive(session: Session *, sock: int)
  }

  class UDPReceiver {
    receive(session: Session *, sock: int, UDPSender *sender)
  }

  class MessageFactory {
    -vector<string> parse_null_terminated_data(raw_data: std::string)
    +Message *create(m: string)
  }

  class TCPMessageFactory {
    +Message *create(m: string)
  }
  class UDPMessageFactory {
    +Message *create(m: string)
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% MESSAGES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  class Message {
    -int code
    +string make_tcp()
    +string serialize()
  }

  class AuthMessage {
    -string username
    -string displayname
    -string secret
    +string make_tcp()
    +string serialize()
  }

  class ConfirmMessage {
    -uint16_t ref_message_id
  }

  class ReplyMessage {
    -uint8_t result
    -uint16_t ref_message_id
    -string message_contents
  }

  class JoinMessage {
    -string channel_id
    -string displayname
    +string serialize()
    +string make_tcp()
  }

  class MsgMessage {
    -string displayname
    -string message_contents
    +string serialize()
    +string make_tcp()
  }

  class ErrMessage {
    -string displayname
    -string message_contents
    +string serialize()
    +string make_tcp()
  }

  class ByeMessage {
    +string serialize()
    +string make_tcp()
  }

  class MessageWithId {
    -uint16_t message_id
  }
  
  class UnknownMessage {
  }

  class UDPSession {
    -addrinfo *server_addrinfo
    -int timeout
    -wait_for_reply()
    -process_reply(ReplyMessage *reply)
  }

  class TCPSession {
    -addrinfo *server_addrinfo
    -wait_for_reply()
    -process_reply()
  }

  <<Abstract>> Session
  Session <|-- TCPSession
  Session <|-- UDPSession


  <<Abstract>> Sender
  Sender <|-- TCPSender
  Sender <|-- UDPSender

  <<Abstract>> Receiver
  Receiver <|-- TCPReceiver
  Receiver <|-- UDPReceiver

  Session -- Receiver : << uses >>
  Session -- Sender : << uses >>
  Client -- Session : << instantiates >>
  Receiver -- MessageFactory : << uses >>
  MessageFactory --  Message : << instantiates >>
  UDPSender -- UDPReceiver : << notifies >>

  <<Abstract>> Message
  Message <|-- ConfirmMessage
  Message <|-- MessageWithId
  Message <|-- UnknownMessage

  <<Abstract>> MessageWithId
  MessageWithId <|-- ReplyMessage
  MessageWithId <|-- AuthMessage
  MessageWithId <|-- JoinMessage
  MessageWithId <|-- MsgMessage
  MessageWithId <|-- ErrMessage
  MessageWithId <|-- ByeMessage

  <<Abstract>> MessageFactory
  MessageFactory <|-- UDPMessageFactory
  MessageFactory <|-- TCPMessageFactory

  <<Abstract>> Client
  Client <|-- UDPClient
  Client <|-- TCPClient

